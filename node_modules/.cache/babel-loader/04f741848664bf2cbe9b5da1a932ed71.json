{"ast":null,"code":"var _jsxFileName = \"/Users/salihsarikaya/Desktop/NucampFolder/Project/themeforest-6MslzEsh-direo-directory-listing-react-template/CampAlley/src/components/content/element/contact-form.js\";\nimport React, { Component } from 'react';\nimport SimpleReactValidator from 'simple-react-validator';\nexport class ContactForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setStateFromInput = event => {\n      var obj = {};\n      obj[event.target.name] = event.target.value;\n      this.setState(obj);\n    };\n\n    this._isMounted = false;\n    this.state = {\n      email: '',\n      name: '',\n      phone: '',\n      message: ''\n    };\n    this.validator = new SimpleReactValidator();\n    this.setStateFromInput = this.setStateFromInput.bind(this);\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const Shipping_Address = e => {\n      e.preventDefault();\n\n      if (this.validator.allValid()) {\n        console.log(this.state);\n        alert('You submitted the form and stuff!');\n        var success = true;\n        return success;\n      } else {\n        this.validator.showMessages();\n        this.forceUpdate();\n        var success2 = false;\n        return success2;\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(\"form\", {\n      id: \"atbdp-contact-form\",\n      className: \"form-vertical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.setStateFromInput,\n      className: \"form-control\",\n      id: \"atbdp-contact-name\",\n      placeholder: \"Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, this.validator.message('Name', this.state.name, 'required|string')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.setStateFromInput,\n      className: \"form-control\",\n      id: \"atbdp-contact-email\",\n      placeholder: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, this.validator.message('Email', this.state.email, 'required|email')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control\",\n      name: \"message\",\n      value: this.state.message,\n      onChange: this.setStateFromInput,\n      id: \"atbdp-contact-message\",\n      rows: \"3\",\n      placeholder: \"Message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: Shipping_Address,\n      type: \"submit\",\n      className: \"btn btn-outline-secondary btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, \"Contact Agent\"));\n  }\n\n}\nexport class ContactForm2 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setStateFromInput = event => {\n      var obj = {};\n      obj[event.target.name] = event.target.value;\n      this.setState(obj);\n    };\n\n    this._isMounted = false;\n    this.state = {\n      email: '',\n      name: '',\n      phone: '',\n      message: ''\n    };\n    this.validator = new SimpleReactValidator();\n    this.setStateFromInput = this.setStateFromInput.bind(this);\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const Shipping_Address = e => {\n      e.preventDefault();\n\n      if (this.validator.allValid()) {\n        console.log(this.state);\n        alert('You submitted the form and stuff!');\n        var success = true;\n        return success;\n      } else {\n        this.validator.showMessages();\n        this.forceUpdate();\n        var success2 = false;\n        return success2;\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(\"form\", {\n      id: \"atbdp-contact-form\",\n      className: \"form-vertical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.setStateFromInput,\n      className: \"form-control\",\n      id: \"atbdp-contact-name\",\n      placeholder: \"Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, this.validator.message('Name', this.state.name, 'required|string')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.setStateFromInput,\n      className: \"form-control\",\n      id: \"atbdp-contact-email\",\n      placeholder: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, this.validator.message('Email', this.state.email, 'required|email')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control\",\n      name: \"message\",\n      value: this.state.message,\n      onChange: this.setStateFromInput,\n      id: \"atbdp-contact-message\",\n      rows: \"3\",\n      placeholder: \"Message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: Shipping_Address,\n      className: \"btn btn-gradient btn-gradient-one btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, \"Send Message\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/salihsarikaya/Desktop/NucampFolder/Project/themeforest-6MslzEsh-direo-directory-listing-react-template/CampAlley/src/components/content/element/contact-form.js"],"names":["React","Component","SimpleReactValidator","ContactForm","constructor","props","setStateFromInput","event","obj","target","name","value","setState","_isMounted","state","email","phone","message","validator","bind","componentDidMount","componentWillUnmount","render","Shipping_Address","e","preventDefault","allValid","console","log","alert","success","showMessages","forceUpdate","success2","ContactForm2"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\n\r\nexport class ContactForm extends Component {\r\n    constructor (props) {\r\n        super (props)\r\n        this.state = {\r\n            email:'',\r\n            name: '',\r\n            phone: '',\r\n            message: ''\r\n        }\r\n        this.validator = new SimpleReactValidator();\r\n        this.setStateFromInput = this.setStateFromInput.bind(this);\r\n    }    \r\n    setStateFromInput = (event) => {\r\n        var obj = {};\r\n        obj[event.target.name] = event.target.value;\r\n        this.setState(obj);\r\n    }\r\n    _isMounted = false;\r\n    \r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render () {\r\n        const Shipping_Address = (e) => {\r\n            e.preventDefault()\r\n            if (this.validator.allValid()) {\r\n                console.log(this.state)\r\n                alert('You submitted the form and stuff!');\r\n                var success = true;                    \r\n                return success;\r\n\r\n            } else {\r\n                this.validator.showMessages();\r\n                this.forceUpdate();\r\n                var success2 = false;\r\n                return success2;\r\n            }\r\n        }\r\n        return (\r\n            <form id=\"atbdp-contact-form\" className=\"form-vertical\">\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.setStateFromInput} className=\"form-control\" id=\"atbdp-contact-name\" placeholder=\"Name\" />\r\n                </div>\r\n                <div className=\"text-danger\">{this.validator.message('Name', this.state.name, 'required|string')}</div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.setStateFromInput} className=\"form-control\" id=\"atbdp-contact-email\" placeholder=\"Email\" />\r\n                </div>\r\n                <div className=\"text-danger\">{this.validator.message('Email', this.state.email, 'required|email')}</div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea className=\"form-control\"  name=\"message\" value={this.state.message} onChange={this.setStateFromInput} id=\"atbdp-contact-message\" rows=\"3\" placeholder=\"Message\" ></textarea>\r\n                </div>\r\n                                \r\n                <button onClick={Shipping_Address} type=\"submit\" className=\"btn btn-outline-secondary btn-block\">Contact Agent</button>\r\n            </form>       \r\n        )\r\n    }\r\n}\r\n\r\nexport class ContactForm2 extends Component {\r\n    constructor (props) {\r\n        super (props)\r\n        this.state = {\r\n            email:'',\r\n            name: '',\r\n            phone: '',\r\n            message: ''\r\n        }\r\n        this.validator = new SimpleReactValidator();\r\n        this.setStateFromInput = this.setStateFromInput.bind(this);\r\n    }    \r\n    setStateFromInput = (event) => {\r\n        var obj = {};\r\n        obj[event.target.name] = event.target.value;\r\n        this.setState(obj);\r\n    }\r\n    _isMounted = false;\r\n    \r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render () {\r\n        const Shipping_Address = (e) => {\r\n            e.preventDefault()\r\n            if (this.validator.allValid()) {\r\n                console.log(this.state)\r\n                alert('You submitted the form and stuff!');\r\n                var success = true;                    \r\n                return success;\r\n\r\n            } else {\r\n                this.validator.showMessages();\r\n                this.forceUpdate();\r\n                var success2 = false;\r\n                return success2;\r\n            }\r\n        }\r\n        return (\r\n            <form id=\"atbdp-contact-form\" className=\"form-vertical\">\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.setStateFromInput} className=\"form-control\" id=\"atbdp-contact-name\" placeholder=\"Name\" />\r\n                </div>\r\n                <div className=\"text-danger\">{this.validator.message('Name', this.state.name, 'required|string')}</div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.setStateFromInput} className=\"form-control\" id=\"atbdp-contact-email\" placeholder=\"Email\" />\r\n                </div>\r\n                <div className=\"text-danger\">{this.validator.message('Email', this.state.email, 'required|email')}</div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea className=\"form-control\"  name=\"message\" value={this.state.message} onChange={this.setStateFromInput} id=\"atbdp-contact-message\" rows=\"3\" placeholder=\"Message\" ></textarea>\r\n                </div>\r\n                                \r\n                <button onClick={Shipping_Address} className=\"btn btn-gradient btn-gradient-one btn-block\">Send Message</button>\r\n            </form>       \r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}